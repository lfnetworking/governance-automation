# ============================================================================
#  LFN Project Governance – automated lifecycle classification & reporting
#  --------------------------------------------------------------------------
#  This workflow runs on a weekly cron **or** on‑demand (`workflow_dispatch`).
#  It performs three high‑level steps:
#    1. *classify*   – Pulls repo metadata & decides the 7‑phase lifecycle.
#    2. *summary*    – Publishes a Markdown roll‑up to the chosen location.
#    3. *next‑steps* – (review‑mode only) opens **one friendly issue per org** 
#                       listing helpful suggestions for repos to reach the next 
#                       lifecycle phase.
#
#  NOTE:  Suggestions are aggregated at the **organization** level, providing
#  project leads a clear, consolidated checklist for improving lifecycle phases.
#  These issues are designed to be supportive and friendly, encouraging progress
#  without imposing strict deadlines. Regular quarterly check‑ins are recommended
#  to review and assess these suggestions.
#
#  ---------------------------------------------------------------------------
#  🔬  HOW TO TEST WITHOUT CREATING ISSUES
#  ---------------------------------------------------------------------------
#  ▸ Navigate to **Actions → LFN Project Governance → Run workflow**.
#  ▸ Enter `mode: dry-run` (or *any* non‑empty string other than `review`).
#
#  The `next‑steps` job only runs when the following condition is *true*:
#
#       github.event_name != 'workflow_dispatch'  ||
#       github.event.inputs.mode == ''            ||
#       github.event.inputs.mode == 'review'
#
#  Launching via *workflow_dispatch* **and** supplying `mode=dry-run` makes all
#  three sub‑clauses evaluate to **false** – therefore `next‑steps` is **skipped**
#  while the *classify* and *summary* jobs still execute. Inspect the produced
#  artifacts & logs to verify behaviour before you enable real‑issue creation.
# ============================================================================
name: "LFN Project Governance"

on:
  # Manual trigger – choose a run mode via the `mode` input.
  workflow_dispatch:
    inputs:
      mode:
        description: "Run mode: '' (default) | review | dry-run | any-tag-you-like"
        required: false
        default: ""
  # Sunday @ 06:23 UTC  (≈ Saturday evening US time)
  schedule:
    - cron: "23 6 * * 0"

# ---------------------------------------------------------------------------
#  Default permission set – tightened via job‑level overrides where needed
# ---------------------------------------------------------------------------
permissions:
  contents: read
  issues: write
  pull-requests: read

concurrency:
  group: "lfn‑governance"
  cancel-in-progress: false

# (Rest of the code unchanged for brevity)

# -------------------------------------------------------------------------
# 3) NEXT‑STEPS – open/update friendly, supportive issue per org quarterly
# -------------------------------------------------------------------------
next-steps:
  needs: classify
  if: |
    ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.mode == '' || github.event.inputs.mode == 'review' }}
  runs-on: ubuntu-latest
  permissions:
    contents: read
    issues: write
  steps:
    - name: Download classification artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    # ──────────────────────────────────────────────────────────────────────
    # 🗂️  GitHub‑Script: Friendly quarterly suggestions per organization
    # --------------------------------------------------------------------
    - name: Open or update friendly “Next Steps” issues **per org**
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.LFN_ADMIN_TOKEN }}
        script: |
          /**
           * Friendly, encouraging issues generated quarterly per organization
           * outlining clear, supportive suggestions for lifecycle improvement.
           * No strict deadlines—just a quarterly check-in.
           */
          const fs = require('fs');
          const path = require('path');

          //-----------------------------------------------------------------
          // 📚 1) Static library with friendly phase‑specific suggestions
          //-----------------------------------------------------------------
          const hints = {
            'Spark': [
              '• Aim for **≥ 3 contributors** in the next quarter.',
              '• Consider releasing your first **tagged version**.',
              '• Start tracking your **OSSF Scorecard**.'
            ],
            'Incubation': [
              '• Increase activity to reach **≥ 20 commits per quarter**.',
              '• Regularly push code to stay **active within 30 days**.',
              '• Strive for an **OSSF Scorecard “Passing”** grade.'
            ],
            'Active Development': [
              '• Enhance **contributor onboarding documentation**.',
              '• Establish a consistent **release schedule**.',
              '• Aim to close issues promptly (under 60 days).'
            ],
            'Stable': [
              '• Release at least **once per year**.',
              '• Conduct quarterly **dependency vulnerability checks**.',
              '• Clearly document your **long‑term support policy**.'
            ],
            'Maintenance / LTS': [
              '• Publish security updates at least every **2 years**.',
              '• Reconsider if the repo should move to **Archive**.',
              '• Update documentation on **supported versions and EOL**.'
            ]
          };

          // Rest of the script remains unchanged for brevity
